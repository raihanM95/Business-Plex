@model BusinessPlex.Models.StockViewModel
@{
    ViewBag.Title = "Stock";
    Layout = "~/Views/Shared/_LogInLayout.cshtml";
}

@using (Html.BeginForm("Search", "Stock", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@

    <div>
        <h4 class="h-position">Stock</h4>
        <hr class="hr-design">

        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        <div class="row">
            <div class="col-md-1 col-md-offset-1">
                @Html.LabelFor(model => model.ProductName, new { @class = "control-label" })
            </div>
            <div class="col-md-3 form-group">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Search by Product Name" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1 col-md-offset-1">
                @Html.LabelFor(model => model.StartDate, new { @class = "control-label" })
            </div>
            <div class="col-md-3 form-group">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" }, @value = DateTime.Now })
                @*@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="row">
            <div class="col-md-1 col-md-offset-1">
                @Html.LabelFor(model => model.CategoryName, new { @class = "control-label" })
            </div>
            <div class="col-md-3 form-group">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Search by Category Name" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1 col-md-offset-1">
                @Html.LabelFor(model => model.EndDate, new { @class = "control-label" })
            </div>
            <div class="col-md-3 form-group">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" }, @value = DateTime.Now })
                @*@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-2 col-md-offset-4">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="gridCheck">
                    <label class="form-check-label" for="gridCheck">Re-Order Level</label>
                </div>
            </div>
            <div class="form-group col-md-2">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="expired">
                    <label class="form-check-label" for="expired">Expired</label>
                </div>
            </div>
        </div>

        <div class="form-group col-md-offset-10">
            <input type="submit" class="btn btn-info" name="search" value="Search" />
        </div>
    </div>
}

<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <th style="width: 5%">SL</th>
            <th>
                @Html.DisplayNameFor(model => model.ProductCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReorderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpiredDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpiredQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OpeningBalance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockOut)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClosingBalance)
            </th>
        </tr>
    </thead>
    @if (Model != null)
    {
        <tbody>
            @{ int sl = 1;}
            @foreach (var item in Model.Stocks)
            {
                <tr>
                    <td>
                        @(sl++)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReorderLevel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExpiredDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExpiredQuantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OpeningBalance)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StockIn)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StockOut)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClosingBalance)
                    </td>
                </tr>
            }
        </tbody>
    }
</table>
